nohup: ignoring input
$ bun run --hot src/index.ts
âœ… Database configured successfully
âœ… Using database storage for visitors
Started development server: http://localhost:4001
âœ… Database connected successfully
âœ… Using database storage for pageviews
ðŸš€ Server running on http://localhost:4001
<-- GET /health
--> GET /health [32m200[0m 1ms
<-- GET /
--> GET / [32m200[0m 2ms
<-- POST /api/pageviews/pageviews
Database pageview creation failed, using memory storage: TypeError: value.toISOString is not a function. (In 'value.toISOString()', 'value.toISOString' is undefined)
      at <anonymous> (/home/remco-stoeten/dev/remcostoeten.nl/node_modules/.pnpm/drizzle-orm@0.44.5_@neondatabase+serverless@1.0.2_@types+pg@8.15.5_bun-types@1.2.23_@types+react@19.1.13_/node_modules/drizzle-orm/pg-core/columns/timestamp.js:34:18)
      at <anonymous> (/home/remco-stoeten/dev/remcostoeten.nl/node_modules/.pnpm/drizzle-orm@0.44.5_@neondatabase+serverless@1.0.2_@types+pg@8.15.5_bun-types@1.2.23_@types+react@19.1.13_/node_modules/drizzle-orm/sql/sql.js:141:73)
      at map (1:11)
      at buildQueryFromSourceParams (/home/remco-stoeten/dev/remcostoeten.nl/node_modules/.pnpm/drizzle-orm@0.44.5_@neondatabase+serverless@1.0.2_@types+pg@8.15.5_bun-types@1.2.23_@types+react@19.1.13_/node_modules/drizzle-orm/sql/sql.js:83:32)
      at map (1:11)
      at buildQueryFromSourceParams (/home/remco-stoeten/dev/remcostoeten.nl/node_modules/.pnpm/drizzle-orm@0.44.5_@neondatabase+serverless@1.0.2_@types+pg@8.15.5_bun-types@1.2.23_@types+react@19.1.13_/node_modules/drizzle-orm/sql/sql.js:83:32)
      at map (1:11)
      at buildQueryFromSourceParams (/home/remco-stoeten/dev/remcostoeten.nl/node_modules/.pnpm/drizzle-orm@0.44.5_@neondatabase+serverless@1.0.2_@types+pg@8.15.5_bun-types@1.2.23_@types+react@19.1.13_/node_modules/drizzle-orm/sql/sql.js:83:32)
      at <anonymous> (/home/remco-stoeten/dev/remcostoeten.nl/node_modules/.pnpm/drizzle-orm@0.44.5_@neondatabase+serverless@1.0.2_@types+pg@8.15.5_bun-types@1.2.23_@types+react@19.1.13_/node_modules/drizzle-orm/sql/sql.js:62:26)
      at <anonymous> (/home/remco-stoeten/dev/remcostoeten.nl/node_modules/.pnpm/drizzle-orm@0.44.5_@neondatabase+serverless@1.0.2_@types+pg@8.15.5_bun-types@1.2.23_@types+react@19.1.13_/node_modules/drizzle-orm/pg-core/query-builders/insert.js:166:53)

--> POST /api/pageviews/pageviews [32m201[0m 7ms
<-- POST /api/visitors/track-visitor
Query: select "id", "visitor_id", "is_new_visitor", "first_visit_at", "last_visit_at", "total_visits", "user_agent", "ip_address", "created_at", "updated_at" from "visitors" where "visitors"."visitor_id" = $1 limit $2 -- params: ["452590e184e08678", 1]
Query: update "visitors" set "is_new_visitor" = $1, "last_visit_at" = $2, "total_visits" = $3, "user_agent" = $4, "updated_at" = $5 where "visitors"."id" = $6 returning "id", "visitor_id", "is_new_visitor", "first_visit_at", "last_visit_at", "total_visits", "user_agent", "ip_address", "created_at", "updated_at" -- params: [false, "2025-10-01T20:21:07.740Z", 2, "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36", "2025-10-01T20:21:07.740Z", "27cea4eb-e6db-4101-b981-494d79d53ced"]
<-- POST /api/blog/analytics/multiple
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["rolling-my-own-analytics", 1]
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["getting-started-with-mdx", 1]
--> POST /api/visitors/track-visitor [32m200[0m 51ms
--> POST /api/blog/analytics/multiple [32m200[0m 68ms
<-- POST /api/blog/analytics/multiple
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["rolling-my-own-analytics", 1]
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["getting-started-with-mdx", 1]
--> POST /api/blog/analytics/multiple [32m200[0m 22ms
<-- GET /health
--> GET /health [32m200[0m 0ms
<-- POST /api/blog/analytics/multiple
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["test-slug", 1]
--> POST /api/blog/analytics/multiple [32m200[0m 485ms
<-- POST /api/blog/analytics/multiple
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["rolling-my-own-analytics", 1]
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["getting-started-with-mdx", 1]
--> POST /api/blog/analytics/multiple [32m200[0m 549ms
<-- POST /api/blog/analytics/multiple
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["rolling-my-own-analytics", 1]
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["getting-started-with-mdx", 1]
--> POST /api/blog/analytics/multiple [32m200[0m 23ms
<-- POST /api/blog/analytics/multiple
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["rolling-my-own-analytics", 1]
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["getting-started-with-mdx", 1]
--> POST /api/blog/analytics/multiple [32m200[0m 23ms
<-- POST /api/blog/analytics/multiple
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["rolling-my-own-analytics", 1]
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["getting-started-with-mdx", 1]
--> POST /api/blog/analytics/multiple [32m200[0m 20ms
<-- POST /api/blog/analytics/multiple
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["rolling-my-own-analytics", 1]
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["getting-started-with-mdx", 1]
--> POST /api/blog/analytics/multiple [32m200[0m 32ms
<-- POST /api/blog/analytics/multiple
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["rolling-my-own-analytics", 1]
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["getting-started-with-mdx", 1]
--> POST /api/blog/analytics/multiple [32m200[0m 239ms
<-- POST /api/blog/analytics/multiple
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["rolling-my-own-analytics", 1]
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["getting-started-with-mdx", 1]
--> POST /api/blog/analytics/multiple [32m200[0m 507ms
<-- POST /api/blog/analytics/multiple
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["rolling-my-own-analytics", 1]
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["getting-started-with-mdx", 1]
--> POST /api/blog/analytics/multiple [32m200[0m 33ms
<-- POST /api/blog/analytics/multiple
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["rolling-my-own-analytics", 1]
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["getting-started-with-mdx", 1]
--> POST /api/blog/analytics/multiple [32m200[0m 21ms
<-- POST /api/blog/analytics/multiple
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["rolling-my-own-analytics", 1]
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["getting-started-with-mdx", 1]
--> POST /api/blog/analytics/multiple [32m200[0m 17ms
<-- POST /api/blog/analytics/multiple
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["rolling-my-own-analytics", 1]
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["getting-started-with-mdx", 1]
--> POST /api/blog/analytics/multiple [32m200[0m 19ms
<-- POST /api/blog/analytics/multiple
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["rolling-my-own-analytics", 1]
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["getting-started-with-mdx", 1]
--> POST /api/blog/analytics/multiple [32m200[0m 32ms
<-- POST /api/blog/analytics/multiple
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["rolling-my-own-analytics", 1]
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["getting-started-with-mdx", 1]
--> POST /api/blog/analytics/multiple [32m200[0m 23ms
<-- POST /api/blog/analytics/multiple
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["rolling-my-own-analytics", 1]
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["getting-started-with-mdx", 1]
--> POST /api/blog/analytics/multiple [32m200[0m 19ms
<-- POST /api/blog/analytics/multiple
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["rolling-my-own-analytics", 1]
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["getting-started-with-mdx", 1]
--> POST /api/blog/analytics/multiple [32m200[0m 22ms
<-- POST /api/pageviews/pageviews
Database pageview creation failed, using memory storage: TypeError: value.toISOString is not a function. (In 'value.toISOString()', 'value.toISOString' is undefined)
      at <anonymous> (/home/remco-stoeten/dev/remcostoeten.nl/node_modules/.pnpm/drizzle-orm@0.44.5_@neondatabase+serverless@1.0.2_@types+pg@8.15.5_bun-types@1.2.23_@types+react@19.1.13_/node_modules/drizzle-orm/pg-core/columns/timestamp.js:34:18)
      at <anonymous> (/home/remco-stoeten/dev/remcostoeten.nl/node_modules/.pnpm/drizzle-orm@0.44.5_@neondatabase+serverless@1.0.2_@types+pg@8.15.5_bun-types@1.2.23_@types+react@19.1.13_/node_modules/drizzle-orm/sql/sql.js:141:73)
      at map (1:11)
      at buildQueryFromSourceParams (/home/remco-stoeten/dev/remcostoeten.nl/node_modules/.pnpm/drizzle-orm@0.44.5_@neondatabase+serverless@1.0.2_@types+pg@8.15.5_bun-types@1.2.23_@types+react@19.1.13_/node_modules/drizzle-orm/sql/sql.js:83:32)
      at map (1:11)
      at buildQueryFromSourceParams (/home/remco-stoeten/dev/remcostoeten.nl/node_modules/.pnpm/drizzle-orm@0.44.5_@neondatabase+serverless@1.0.2_@types+pg@8.15.5_bun-types@1.2.23_@types+react@19.1.13_/node_modules/drizzle-orm/sql/sql.js:83:32)
      at map (1:11)
      at buildQueryFromSourceParams (/home/remco-stoeten/dev/remcostoeten.nl/node_modules/.pnpm/drizzle-orm@0.44.5_@neondatabase+serverless@1.0.2_@types+pg@8.15.5_bun-types@1.2.23_@types+react@19.1.13_/node_modules/drizzle-orm/sql/sql.js:83:32)
      at <anonymous> (/home/remco-stoeten/dev/remcostoeten.nl/node_modules/.pnpm/drizzle-orm@0.44.5_@neondatabase+serverless@1.0.2_@types+pg@8.15.5_bun-types@1.2.23_@types+react@19.1.13_/node_modules/drizzle-orm/sql/sql.js:62:26)
      at <anonymous> (/home/remco-stoeten/dev/remcostoeten.nl/node_modules/.pnpm/drizzle-orm@0.44.5_@neondatabase+serverless@1.0.2_@types+pg@8.15.5_bun-types@1.2.23_@types+react@19.1.13_/node_modules/drizzle-orm/pg-core/query-builders/insert.js:166:53)

--> POST /api/pageviews/pageviews [32m201[0m 3ms
<-- POST /api/visitors/track-visitor
Query: select "id", "visitor_id", "is_new_visitor", "first_visit_at", "last_visit_at", "total_visits", "user_agent", "ip_address", "created_at", "updated_at" from "visitors" where "visitors"."visitor_id" = $1 limit $2 -- params: ["d8e323664bfae65f", 1]
Query: insert into "visitors" ("id", "visitor_id", "is_new_visitor", "first_visit_at", "last_visit_at", "total_visits", "user_agent", "ip_address", "created_at", "updated_at") values ($1, $2, $3, $4, $5, $6, $7, default, $8, $9) returning "id", "visitor_id", "is_new_visitor", "first_visit_at", "last_visit_at", "total_visits", "user_agent", "ip_address", "created_at", "updated_at" -- params: ["221d05bc-7288-4eb4-8c23-f2f972173dec", "d8e323664bfae65f", true, "2025-10-01T21:19:09.365Z", "2025-10-01T21:19:09.365Z", 1, "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36", "2025-10-01T21:19:09.365Z", "2025-10-01T21:19:09.365Z"]
--> POST /api/visitors/track-visitor [32m200[0m 523ms
<-- POST /api/blog/analytics/multiple
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["rolling-my-own-analytics", 1]
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["getting-started-with-mdx", 1]
--> POST /api/blog/analytics/multiple [32m200[0m 61ms
<-- OPTIONS /api/blog/analytics/rolling-my-own-analytics
--> OPTIONS /api/blog/analytics/rolling-my-own-analytics [32m204[0m 3ms
<-- OPTIONS /api/blog/analytics/building-scalable-react-applications
--> OPTIONS /api/blog/analytics/building-scalable-react-applications [32m204[0m 0ms
<-- OPTIONS /api/blog/analytics/getting-started-with-mdx
--> OPTIONS /api/blog/analytics/getting-started-with-mdx [32m204[0m 0ms
<-- GET /api/blog/analytics/rolling-my-own-analytics
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["rolling-my-own-analytics", 1]
<-- GET /api/blog/analytics/building-scalable-react-applications
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["building-scalable-react-applications", 1]
<-- OPTIONS /api/blog/analytics/typescript-best-practices
--> OPTIONS /api/blog/analytics/typescript-best-practices [32m204[0m 1ms
<-- OPTIONS /api/blog/analytics/modern-css-techniques
--> OPTIONS /api/blog/analytics/modern-css-techniques [32m204[0m 1ms
<-- GET /api/blog/analytics/getting-started-with-mdx
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["getting-started-with-mdx", 1]
--> GET /api/blog/analytics/rolling-my-own-analytics [32m200[0m 35ms
--> GET /api/blog/analytics/building-scalable-react-applications [32m200[0m 29ms
<-- GET /api/blog/analytics/typescript-best-practices
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["typescript-best-practices", 1]
<-- GET /api/blog/analytics/modern-css-techniques
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["modern-css-techniques", 1]
--> GET /api/blog/analytics/getting-started-with-mdx [32m200[0m 44ms
--> GET /api/blog/analytics/typescript-best-practices [32m200[0m 23ms
--> GET /api/blog/analytics/modern-css-techniques [32m200[0m 60ms
<-- POST /api/blog/analytics/multiple
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["rolling-my-own-analytics", 1]
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["getting-started-with-mdx", 1]
<-- POST /api/blog/analytics/multiple
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["rolling-my-own-analytics", 1]
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["getting-started-with-mdx", 1]
--> POST /api/blog/analytics/multiple [32m200[0m 22ms
--> POST /api/blog/analytics/multiple [32m200[0m 47ms
<-- POST /api/blog/analytics/multiple
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["rolling-my-own-analytics", 1]
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["getting-started-with-mdx", 1]
--> POST /api/blog/analytics/multiple [32m200[0m 1s
<-- POST /api/blog/analytics/multiple
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["rolling-my-own-analytics", 1]
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["getting-started-with-mdx", 1]
--> POST /api/blog/analytics/multiple [32m200[0m 31ms
<-- POST /api/blog/analytics/multiple
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["rolling-my-own-analytics", 1]
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["getting-started-with-mdx", 1]
--> POST /api/blog/analytics/multiple [32m200[0m 239ms
<-- POST /api/blog/analytics/multiple
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["rolling-my-own-analytics", 1]
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["getting-started-with-mdx", 1]
--> POST /api/blog/analytics/multiple [32m200[0m 37ms
<-- POST /api/blog/analytics/multiple
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["rolling-my-own-analytics", 1]
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["getting-started-with-mdx", 1]
--> POST /api/blog/analytics/multiple [32m200[0m 21ms
<-- POST /api/blog/analytics/multiple
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["rolling-my-own-analytics", 1]
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["getting-started-with-mdx", 1]
--> POST /api/blog/analytics/multiple [32m200[0m 1s
<-- POST /api/blog/analytics/multiple
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["rolling-my-own-analytics", 1]
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["getting-started-with-mdx", 1]
--> POST /api/blog/analytics/multiple [32m200[0m 22ms
<-- OPTIONS /api/blog/analytics/multiple
--> OPTIONS /api/blog/analytics/multiple [32m204[0m 1ms
<-- POST /api/blog/analytics/multiple
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["rolling-my-own-analytics", 1]
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["getting-started-with-mdx", 1]
--> POST /api/blog/analytics/multiple [32m200[0m 1s
<-- POST /api/blog/analytics/multiple
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["rolling-my-own-analytics", 1]
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["getting-started-with-mdx", 1]
--> POST /api/blog/analytics/multiple [32m200[0m 21ms
<-- POST /api/blog/analytics/multiple
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["rolling-my-own-analytics", 1]
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["getting-started-with-mdx", 1]
--> POST /api/blog/analytics/multiple [32m200[0m 25ms
<-- POST /api/blog/analytics/multiple
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["rolling-my-own-analytics", 1]
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["getting-started-with-mdx", 1]
--> POST /api/blog/analytics/multiple [32m200[0m 21ms
<-- POST /api/blog/analytics/multiple
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["rolling-my-own-analytics", 1]
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["getting-started-with-mdx", 1]
--> POST /api/blog/analytics/multiple [32m200[0m 238ms
<-- POST /api/blog/analytics/multiple
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["rolling-my-own-analytics", 1]
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["getting-started-with-mdx", 1]
--> POST /api/blog/analytics/multiple [32m200[0m 20ms
âœ… Database configured successfully
âœ… Using database storage for visitors
Started development server: http://localhost:4001
âœ… Database connected successfully
âœ… Using database storage for pageviews
ðŸš€ Server running on http://localhost:4001
<-- POST /api/blog/analytics/multiple
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["rolling-my-own-analytics", 1]
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["getting-started-with-mdx", 1]
--> POST /api/blog/analytics/multiple [32m200[0m 78ms
<-- POST /api/blog/analytics/multiple
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["rolling-my-own-analytics", 1]
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["getting-started-with-mdx", 1]
--> POST /api/blog/analytics/multiple [32m200[0m 24ms
<-- POST /api/blog/analytics/multiple
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["rolling-my-own-analytics", 1]
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["getting-started-with-mdx", 1]
--> POST /api/blog/analytics/multiple [32m200[0m 26ms
<-- POST /api/blog/analytics/multiple
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["rolling-my-own-analytics", 1]
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["getting-started-with-mdx", 1]
--> POST /api/blog/analytics/multiple [32m200[0m 23ms
<-- POST /api/blog/analytics/multiple
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["rolling-my-own-analytics", 1]
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["getting-started-with-mdx", 1]
--> POST /api/blog/analytics/multiple [32m200[0m 21ms
<-- POST /api/blog/analytics/multiple
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["rolling-my-own-analytics", 1]
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["getting-started-with-mdx", 1]
--> POST /api/blog/analytics/multiple [32m200[0m 20ms
âœ… Database configured successfully
âœ… Using database storage for visitors
Started development server: http://localhost:4001
âœ… Database connected successfully
âœ… Using database storage for pageviews
ðŸš€ Server running on http://localhost:4001
<-- POST /api/blog/analytics/multiple
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["rolling-my-own-analytics", 1]
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["getting-started-with-mdx", 1]
--> POST /api/blog/analytics/multiple [32m200[0m 34ms
<-- POST /api/blog/analytics/multiple
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["rolling-my-own-analytics", 1]
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["getting-started-with-mdx", 1]
--> POST /api/blog/analytics/multiple [32m200[0m 34ms
<-- POST /api/blog/analytics/multiple
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["rolling-my-own-analytics", 1]
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["getting-started-with-mdx", 1]
--> POST /api/blog/analytics/multiple [32m200[0m 33ms
<-- POST /api/blog/analytics/multiple
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["rolling-my-own-analytics", 1]
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["getting-started-with-mdx", 1]
--> POST /api/blog/analytics/multiple [32m200[0m 21ms
<-- POST /api/blog/analytics/multiple
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["rolling-my-own-analytics", 1]
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["getting-started-with-mdx", 1]
--> POST /api/blog/analytics/multiple [32m200[0m 17ms
<-- POST /api/blog/analytics/multiple
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["rolling-my-own-analytics", 1]
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["getting-started-with-mdx", 1]
--> POST /api/blog/analytics/multiple [32m200[0m 20ms
<-- POST /api/blog/analytics/multiple
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["rolling-my-own-analytics", 1]
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["getting-started-with-mdx", 1]
--> POST /api/blog/analytics/multiple [32m200[0m 20ms
<-- POST /api/blog/analytics/multiple
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["rolling-my-own-analytics", 1]
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["getting-started-with-mdx", 1]
--> POST /api/blog/analytics/multiple [32m200[0m 1s
<-- POST /api/blog/analytics/multiple
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["rolling-my-own-analytics", 1]
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["getting-started-with-mdx", 1]
--> POST /api/blog/analytics/multiple [32m200[0m 234ms
<-- POST /api/blog/analytics/multiple
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["rolling-my-own-analytics", 1]
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["getting-started-with-mdx", 1]
--> POST /api/blog/analytics/multiple [32m200[0m 21ms
<-- POST /api/blog/analytics/multiple
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["rolling-my-own-analytics", 1]
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["getting-started-with-mdx", 1]
--> POST /api/blog/analytics/multiple [32m200[0m 26ms
<-- POST /api/blog/analytics/multiple
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["rolling-my-own-analytics", 1]
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["getting-started-with-mdx", 1]
--> POST /api/blog/analytics/multiple [32m200[0m 39ms
<-- POST /api/blog/analytics/multiple
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["rolling-my-own-analytics", 1]
Query: select "id", "slug", "total_views", "unique_views", "recent_views", "last_viewed_at", "created_at", "updated_at" from "blog_analytics" where "blog_analytics"."slug" = $1 limit $2 -- params: ["getting-started-with-mdx", 1]
--> POST /api/blog/analytics/multiple [32m200[0m 16ms
error: script "dev" was terminated by signal SIGHUP (Terminal hung up)
