**Prompt:**

**Objective:** Create a comprehensive and interactive CMS UI for managing pages and content blocks.

**Key Requirements:**

1. **UI Framework:**
   - Use **React** with **TypeScript** for component-based architecture.
   - Utilize **Tailwind CSS** for styling, leveraging the existing HSL-based design system in `globals.css`.

2. **Content Management:**
   - **Pages Management:**
     - Implement CRUD operations for pages with `slug`, `title`, `description`, and `isPublished`.
     - Integrate page navigation based on slugs.

   - **Content Blocks:**
     - Implement `heading` and `paragraph` block types.
     - Allow users to add, update, delete, and reorder blocks within a page.

3. **Content Segments:**
   - Enable segmentation within blocks for `text`, `highlighted`, `link`, and custom `project-card` JSON structures.
   - Include UI to edit text segments and JSON fields directly.

4. **Styling and Interactivity:**
   - Allow in-line editing of text and the ability to update HSL color values for highlights.
   - Use existing components like `ProjectCard` to render content previews.

5. **Additional Features:**
   - Preview changes in real-time with a split-view for editing and rendering.
   - Implement authentication for secure access to the CMS.

6. **Folder Structure:**
   - Place new UI components under `src/components/cms/`.
   - Create views for pages under `src/views/cms/`.
   - Utility functions can reside in `src/utils/`.

---
